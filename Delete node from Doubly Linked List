Delete node from Doubly Linked List
/****************************************************************

 Following is the class structure of the Node class:

 class Node
 {
     public int data;
     public Node next;
     public Node prev;

     Node()
     {
         this.data = 0;
         this.next = null;
         this.prev = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
         this.prev = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
         this.prev = next;
     }
 }

 *****************************************************************/


public class Solution {
    public static Node deleteNode(Node head, int k) {
        // Case 1: Deleting the head node
        if (k == 1) {
            if (head != null) {
                head = head.next;
                if (head != null) {
                    head.prev = null;
                }
            }
            return head;
        }

        // Case 2: Deleting a node in the middle
        int ct = 1;
        Node temp = head;
        while (temp != null && ct < k) {
            temp = temp.next;
            ct++;
        }

        if (temp == null) {
            return head; // Node not found at position k
        }

        Node prevNode = temp.prev;
        Node nextNode = temp.next;

        if (prevNode != null) {
            prevNode.next = nextNode;
        }
        if (nextNode != null) {
            nextNode.prev = prevNode;
        }

        return head;
    }
}
